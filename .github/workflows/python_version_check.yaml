name: Python version check

on:
  push:
    branches:
      - main
      - dev
      - issues/*
  pull_request:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
        os: [ windows-latest, ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Copy converter_base to current directory Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          xcopy /E /I /Y focus_converter_base\* .\
      - name: Copy converter_base to current directory Linux, MacOS
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          cp -r focus_converter_base/* ./
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry lock
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}-${{ matrix.os }}-${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          poetry install
      - name: Test with pytest
        run: |
          python --version
          poetry run which python
          poetry run python --version
          poetry run python -m focus_converter.main list-providers
